---
Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name that joins all the stacks

  ServicesDomain:
    Type: String
    Description: DNS namespace used by services e.g. default.svc.cluster.local

  AppMeshMeshName:
    Type: String
    Description: Name of mesh

Resources:

  SearchServiceTeslaVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: searchservice-tesla-vn
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "searchservice-tesla.${ServicesDomain}"

  SearchServiceAppleVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: searchservice-apple-vn
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "searchservice-apple.${ServicesDomain}"

  SearchServiceDropboxVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: searchservice-dropbox-vn
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "searchservice-dropbox.${ServicesDomain}"

  SearchServiceMicrosoftVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: searchservice-microsoft-vn
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "searchservice.${ServicesDomain}"

  SearchServiceVirtualRouter:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualRouterName: searchservice-vr
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http

  SearchServiceRoute:
    Type: AWS::AppMesh::Route
    DependsOn:
      - SearchServiceVirtualRouter
      - SearchServiceMicrosoftVirtualNode
      - SearchServiceDropboxVirtualNode
      - SearchServiceAppleVirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualRouterName: searchservice-vr
      RouteName: searchservice-route
      Spec:
        HttpRoute:
          Action:
            WeightedTargets:
              - VirtualNode: searchservice-microsoft-vn
                Weight: 1
              - VirtualNode: searchservice-apple-vn
                Weight: 1
              - VirtualNode: searchservice-dropbox-vn
                Weight: 1
          Match:
            Prefix: "/"

  SearchServiceVirtualService:
    Type: AWS::AppMesh::VirtualService
    DependsOn:
      - SearchServiceVirtualRouter
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualServiceName: !Sub "searchservice.${ServicesDomain}"
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: searchservice-vr

  TcpEchoVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: tcpecho-vn
      Spec:
        Listeners:
          - PortMapping:
              Port: 2701
              Protocol: tcp
            HealthCheck:
              Protocol: tcp
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "tcpecho.${ServicesDomain}"

  TcpEchoVirtualService:
    Type: AWS::AppMesh::VirtualService
    DependsOn:
      - TcpEchoVirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualServiceName: !Sub "tcpecho.${ServicesDomain}"
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName: tcpecho-vn

  ResearchPreferencesVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
      - SearchServiceVirtualService
      - TcpEchoVirtualService
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: researchpreferences-vn
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "researchpreferences.${ServicesDomain}"
        Backends:
          - VirtualService:
              VirtualServiceName: !Sub "searchservice.${ServicesDomain}"
          - VirtualService:
              VirtualServiceName: !Sub "tcpecho.${ServicesDomain}"